{
  "title": "Тест по структурным паттернам проектирования",
  "questions": [
    {
      "text": "Какой паттерн позволяет группировать объекты в древовидную структуру и работать с ними как с единым объектом?",
      "options": [
        "Фасад",
        "Компоновщик (Composite)",
        "Адаптер",
        "Декоратор"
      ],
      "correct": 1
    },
    {
      "text": "Какой паттерн предоставляет простой интерфейс для работы со сложной подсистемой?",
      "options": [
        "Фасад (Facade)",
        "Мост",
        "Заместитель",
        "Легковес"
      ],
      "correct": 0
    },
    {
      "text": "Какой паттерн разделяет абстракцию и реализацию, позволяя изменять их независимо?",
      "options": [
        "Адаптер",
        "Мост (Bridge)",
        "Декоратор",
        "Компоновщик"
      ],
      "correct": 1
    },
    {
      "text": "Какой паттерн используется для совместимости несовместимых интерфейсов?",
      "options": [
        "Адаптер (Adapter)",
        "Прокси",
        "Легковес",
        "Фасад"
      ],
      "correct": 0
    },
    {
      "text": "Какой паттерн позволяет динамически добавлять новую функциональность объектам?",
      "options": [
        "Компоновщик",
        "Адаптер",
        "Декоратор (Decorator)",
        "Мост"
      ],
      "correct": 2
    },
    {
      "text": "Какой паттерн заменяет реальный объект его заместителем, контролируя доступ к нему?",
      "options": [
        "Легковес",
        "Фасад",
        "Компоновщик",
        "Заместитель (Proxy)"
      ],
      "correct": 3
    },
    {
      "text": "Какой паттерн оптимизирует использование памяти за счёт разделения общего состояния объектов?",
      "options": [
        "Адаптер",
        "Декоратор",
        "Легковес (Flyweight)",
        "Мост"
      ],
      "correct": 2
    },
    {
      "text": "Какой паттерн позволяет отложить создание ресурсоёмкого объекта до его фактического использования?",
      "options": [
        "Адаптер",
        "Виртуальный прокси (Proxy)",
        "Фасад",
        "Компоновщик"
      ],
      "correct": 1
    },
    {
      "text": "Какой паттерн лучше всего подходит для добавления логирования или кэширования без изменения исходного класса?",
      "options": [
        "Адаптер",
        "Легковес",
        "Мост",
        "Декоратор (Decorator)"
      ],
      "correct": 3
    },
    {
      "text": "Какой паттерн позволяет управлять доступом к объекту, например, проверяя права доступа?",
      "options": [
        "Компоновщик",
        "Фасад",
        "Защищающий прокси (Proxy)",
        "Адаптер"
      ],
      "correct": 2
    }
  ]
}